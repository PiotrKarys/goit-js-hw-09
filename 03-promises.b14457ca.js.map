{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAGC,iBAEH,MAAMZ,EAAQa,SAASC,KAAKC,SAASf,MAAMgB,OACrCC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAE7C,IAAIG,EAAenB,EACnB,IAAK,IAAIoB,EAAI,EAAGA,EAAIF,EAAQE,IAC1BtB,EAAcsB,EAAI,EAAGD,GAClBE,MAAKC,IACJC,EAAA3B,GAAS4B,OAAOC,QACd,WAAWH,EAAOvB,2BAA2BuB,EAAOtB,UACrD,IAEF0B,OAAMC,IACLJ,EAAA3B,GAAS4B,OAAOI,QACd,WAAWD,EAAM5B,2BAA2B4B,EAAM3B,UACnD,IAGLmB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (ev) {\n  ev.preventDefault();\n\n  const delay = parseInt(this.elements.delay.value);\n  const step = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n\n  let currentDelay = delay;\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, currentDelay)\n      .then(result => {\n        Notiflix.Notify.success(\n          `Promise ${result.position} resolved after ${result.delay}ms`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `Promise ${error.position} rejected after ${error.delay}ms`\n        );\n      });\n\n    currentDelay += step;\n  }\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","ev","preventDefault","parseInt","this","elements","value","step","amount","currentDelay","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.b14457ca.js.map"}